/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.microsoft.sqlserver.jdbc.SQLServerException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author DELL
 */
public class QLMuonSach extends javax.swing.JFrame {

    ArrayList<muonSach> list = new ArrayList<>();
    ArrayList<muonSach1> list1 = new ArrayList<>();

    String userName = "sa";
    String password = "hanh789";
    String url = "jdbc:sqlserver://localhost:1433;databaseName=QLTV_BT";
    Connection conn;
    private DefaultTableModel tableModelMS;
    private int selectedRowIndex = -1;

    /**
     * Creates new form QLMuonSach
     */
    public QLMuonSach() {
        initComponents();
        LoadDataToArray();
        LoadDataArrayListToTable1();
        setLocationRelativeTo(null);
        list1 = new ArrayList<>();
        tableModelMS = (DefaultTableModel) tblmsach.getModel();
    }

    public ArrayList<muonSach1> getListMS() {
        return list1;
    }

    public void setListMS(ArrayList<muonSach1> listMS) {
        this.list1 = list1;
    }

    private void LoadDataToArray() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            Connection conn = DriverManager.getConnection(url, userName, password);
            Statement stm = (Statement) conn.createStatement();
            String sql = "select * from QLyMuonSach";
            ResultSet rs = stm.executeQuery(sql);
            list1.clear();
            while (rs.next()) {

                var maDG = rs.getString(1);
                var maSach = rs.getString(2);

                var ngayMuon = rs.getString(3);
                var ngayHenTra = rs.getString(4);
                var ngayTra = rs.getString(5);
                var ttMuon = rs.getString(6);

                muonSach1 msach = new muonSach1(maSach, maDG, ngayMuon, ngayHenTra, ngayTra, ttMuon);
                list1.add(msach);
            }
            conn.close();
        } catch (Exception e) {
            System.out.println("Ket noi that bai");
            System.out.println(e);
        }
    }

    private void LoadDataArrayListToTable1() {
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();
        model.setRowCount(0);

        for (muonSach1 s : list1) {
            model.addRow(new Object[]{s.getMaDG(), s.getMaSach(), s.getNgaymuon(), s.getNgayhentra(), s.getNgaytra(), s.getTtmuon()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmsach = new javax.swing.JTable();
        btnlamMoi = new javax.swing.JButton();
        btnthoat = new javax.swing.JButton();
        btntroLai = new javax.swing.JButton();
        btnMuon = new javax.swing.JButton();
        btnTra = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        rdoTheoMDG = new javax.swing.JRadioButton();
        rdoTheoMS = new javax.swing.JRadioButton();
        txtTim = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNgayM = new javax.swing.JTextField();
        txtmaS = new javax.swing.JTextField();
        txtMaDG = new javax.swing.JTextField();
        txtngayTra = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtngayHenTra = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtTTMuon = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÍ MƯỢN SÁCH");

        tblmsach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã ĐG", "Mã sách", "Ngày mượn", "Ngày hẹn trả", "Ngày trả", "TTrang mượn"
            }
        ));
        tblmsach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmsachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmsach);

        btnlamMoi.setText("Làm mới");
        btnlamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlamMoiActionPerformed(evt);
            }
        });

        btnthoat.setText("Thoát");
        btnthoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthoatActionPerformed(evt);
            }
        });

        btntroLai.setText("Trở lại");
        btntroLai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntroLaiActionPerformed(evt);
            }
        });

        btnMuon.setText("Mượn sách");
        btnMuon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMuonActionPerformed(evt);
            }
        });

        btnTra.setText("Trả sách");
        btnTra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("tìm kiếm"));

        buttonGroup1.add(rdoTheoMDG);
        rdoTheoMDG.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdoTheoMDG.setText("Theo Mã Độc Giả");

        buttonGroup1.add(rdoTheoMS);
        rdoTheoMS.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        rdoTheoMS.setText("Theo Mã Sách");
        rdoTheoMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoTheoMSActionPerformed(evt);
            }
        });

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdoTheoMS)
                    .addComponent(rdoTheoMDG))
                .addGap(18, 18, 18)
                .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(btnTimKiem)
                .addGap(34, 34, 34))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rdoTheoMDG)
                        .addGap(9, 9, 9)
                        .addComponent(rdoTheoMS))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(10, 10, 10)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(10, Short.MAX_VALUE)))
        );

        jLabel4.setText("Mã DG:");

        jLabel3.setText("Mã sách:");

        jLabel5.setText("Ngày mượn:");

        jLabel6.setText("Ngày trả:");

        jLabel8.setText("Ngày hẹn trả:");

        jLabel7.setText("TTrang mượn:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtmaS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                    .addComponent(txtMaDG, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayM))
                .addGap(75, 75, 75)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtTTMuon))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(86, 86, 86)
                            .addComponent(txtngayTra, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtngayHenTra, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 50, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtngayHenTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtngayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtTTMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtmaS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNgayM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(btnMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(btnlamMoi)
                .addGap(60, 60, 60)
                .addComponent(btnthoat)
                .addGap(53, 53, 53)
                .addComponent(btnTra, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(btntroLai, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnlamMoi)
                    .addComponent(btnthoat)
                    .addComponent(btnMuon)
                    .addComponent(btnTra)
                    .addComponent(btntroLai))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblmsachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmsachMouseClicked
        // TODO add your handling code here:
        int r = tblmsach.getSelectedRow();
        selectedRowIndex = r;
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();

        String maDG = (String) model.getValueAt(r, 0);
        String maSach = (String) model.getValueAt(r, 1);
        String ngayM = (String) model.getValueAt(r, 2);
        String ngayHT = (String) model.getValueAt(r, 3);
        String ngayT = (String) model.getValueAt(r, 4);
        String ttMuon = (String) model.getValueAt(r, 5);

        txtMaDG.setText(maDG);
        txtmaS.setText(maSach);
        txtNgayM.setText(ngayM);
        txtngayHenTra.setText(ngayHT);
        txtngayTra.setText(ngayT);
        txtTTMuon.setText(ttMuon);
    }//GEN-LAST:event_tblmsachMouseClicked

    public boolean checktrung(String ma) {
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).maDG.equalsIgnoreCase(ma)) {
                return true;
            }

        }
        return false;
    }

    private void btnlamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlamMoiActionPerformed
        // TODO add your handling code here:
        txtMaDG.setText("");
        txtmaS.setText("");
        txtNgayM.setText("");
        txtngayTra.setText("");
        txtngayHenTra.setText("");
        txtTTMuon.setText("");
        txtTim.setText("");
    }//GEN-LAST:event_btnlamMoiActionPerformed

    private void btnthoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthoatActionPerformed
        // TODO add your handling code here:
        int r = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát không?", "Thoát", JOptionPane.YES_NO_OPTION);
        if (r == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_btnthoatActionPerformed

    private void btntroLaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntroLaiActionPerformed
        // TODO add your handling code here:
        new MenuChinh().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btntroLaiActionPerformed

    private void btnMuonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMuonActionPerformed

        muonSach();
    }//GEN-LAST:event_btnMuonActionPerformed
    private int edit;
    private void btnTraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraActionPerformed

        // Lấy thông tin từ bảng
//            edit = tblmsach.getSelectedRow();
//            if (edit != -1) {
//                var ts = this.list1.get(edit);
//                traSach eRB = new traSach(this, rootPaneCheckingEnabled, ts);
//                eRB.setVisible(true);
//
//            } else {
//                JOptionPane.showMessageDialog(rootPane, "vui lòng chọn số hàng để sửa thông tin");
//            }
        trasach();
    }//GEN-LAST:event_btnTraActionPerformed

    private void trasach() {
        try {
            // Kiểm tra dữ liệu đầu vào
            String maDG = txtMaDG.getText();
            String maSach = txtmaS.getText();
            String ngayMuon = txtNgayM.getText();
            var ngayHenTra = txtngayHenTra.getText();
            String ngaytra = txtngayTra.getText();
            String tt = txtTTMuon.getText();
            if (maDG.isEmpty() || maSach.isEmpty() || ngayHenTra.isEmpty() || ngayMuon.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập đầy đủ thông tin.");
                return;
            }
            var cnms = new muonSach1(maSach, maDG, ngayMuon, ngayHenTra, ngaytra);
            list1.add(cnms);
            try {
                Connection conn = DriverManager.getConnection(url, userName, password);
                String sql = "update QLyMuonSach set MaSach= ?, NgayMuon=?, NgayHenTra=?, NgayTra=?, TTMuon =? where MaDocGia = ?";
                PreparedStatement st = conn.prepareStatement(sql);
                st.setString(1, maSach);
                st.setString(2, ngayMuon);
                st.setString(3, ngayHenTra);
                st.setString(4, ngaytra);
                st.setString(5, "DaTra");
                st.setString(6, maDG);

                st.executeUpdate();
                if (selectedRowIndex != -1) {
                    tblmsach.getModel().setValueAt(maDG, selectedRowIndex, 0);
                    tblmsach.getModel().setValueAt(maSach, selectedRowIndex, 1);
                    tblmsach.getModel().setValueAt(ngayMuon, selectedRowIndex, 2);
                    tblmsach.getModel().setValueAt(ngayHenTra, selectedRowIndex, 3);
                    tblmsach.getModel().setValueAt(ngaytra, selectedRowIndex, 4);
                    tblmsach.getModel().setValueAt("DaTra", selectedRowIndex, 5);
                }

            } catch (SQLServerException ex) {
                System.out.println("Lỗi 1:" + ex);
            } catch (Exception e) {
                System.out.println("Lỗi 2:" + e);
            }
//            capNhatMS dfRB = new capNhatMS();
//            dfRB.capNhatmuonSach(cnms);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Đã xảy ra lỗi: " + e.getMessage());
        }

    }

    private void themvaobangMS2(muonSach1 s) {
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();
        model.addRow(new Object[]{s.getMaDG(), s.getMaSach(), s.getNgaymuon(), s.getNgayhentra(), s.getNgaytra(), "DaTra"});
    }

    public void themvaobang2(muonSach1 ms) {
//        tableModelMS.removeRow(edit);
//
//        var row = new Object[]{ms.getMaDG(), ms.getMaSach(), ms.getNgaymuon(),
//            ms.getNgayhentra(),ms.getNgaytra(),
//             ms.getTtmuon()};
//        tableModelMS.insertRow(edit, row);
//        tableModelMS.fireTableDataChanged();
        if (edit != -1 && edit < tableModelMS.getRowCount()) {
            tableModelMS.removeRow(edit);
            var row = new Object[]{ms.getMaDG(), ms.getMaSach(), ms.getNgaymuon(),
                ms.getNgayhentra(), ms.getNgaytra(),
                ms.getNgaytra(), ms.getTtmuon()};
            tableModelMS.insertRow(edit, row);
            tableModelMS.fireTableDataChanged();

            // Cập nhật lại dữ liệu trong list1
            list1.set(edit, ms);
            System.out.println("Dữ liệu trong list1 sau khi cập nhật: " + list1);
        } else {
            // Xử lý khi edit không hợp lệ
            System.out.println("Chưa chọn dòng hoặc chỉ số không hợp lệ.");
        }

    }
    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        var timK = txtTim.getText();
        if (!timK.isEmpty()) {
            if (rdoTheoMDG.isSelected()) {
                timtheoMaDG();
            } else {
                timtheoMaS();
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "ô tìm kiếm đang rỗng!");
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void timtheoMaDG() {
        String maDG = txtTim.getText();
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();
        model.setRowCount(0);
        boolean tim = false;

        for (muonSach1 s : list1) {
            if (s.getMaDG().toLowerCase().contains(maDG.toLowerCase())) {
                model.addRow(new Object[]{s.getMaDG(), s.getMaSach(), s.getNgaymuon(), s.getNgayhentra(), s.getNgaytra(), s.getTtmuon()});
                tim = true;
            }
        }
        if (!tim) {
            JOptionPane.showMessageDialog(this, "Mã độc giả không tồn tại");
        }
    }

    private void timtheoMaS() {
        String maSach = txtTim.getText();
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();
        model.setRowCount(0);
        boolean tim = false;

        for (muonSach1 s : list1) {
            if (s.getMaSach().toLowerCase().contains(maSach.toLowerCase())) {
                model.addRow(new Object[]{s.getMaDG(), s.getMaSach(), s.getNgaymuon(), s.getNgayhentra(), s.getNgaytra(), s.getTtmuon()});
                tim = true;
            }
        }
        if (!tim) {
            JOptionPane.showMessageDialog(this, "Mã sách không tồn tại");
        }
    }
    private void rdoTheoMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoTheoMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdoTheoMSActionPerformed

    private void clearInputFields() {
        txtMaDG.setText("");
        txtmaS.setText("");
        txtNgayM.setText("");
        txtngayHenTra.setText("");
        txtngayTra.setText("");
        txtTTMuon.setText("");
    }

    private void muonSach() {
        try {
            // Kiểm tra dữ liệu đầu vào
            String maDG = txtMaDG.getText();
            String maSach = txtmaS.getText();
            String ngayMuon = txtNgayM.getText();
            var ngayHenTra = txtngayHenTra.getText();
            String ngaytra = txtngayTra.getText();
            String tt = txtTTMuon.getText();
            if (maDG.isEmpty() || maSach.isEmpty() || ngayHenTra.isEmpty() || ngayMuon.isEmpty()) {
                JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập đầy đủ thông tin.");
                return;
            }
            var cnms = new muonSach1(maSach, maDG, ngayMuon, ngayHenTra);
            list1.add(cnms);
            try {
                Connection conn = DriverManager.getConnection(url, userName, password);
                String sql = "INSERT INTO QLyMuonSach (MaDocGia, MaSach, NgayMuon, NgayHenTra, NgayTra, TTMuon) VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement pstmt = conn.prepareStatement(sql);
                pstmt.setString(1, maDG);
                pstmt.setString(2, maSach);
                pstmt.setString(3, ngayMuon);
                pstmt.setString(4, ngayHenTra);
                pstmt.setString(5, ngaytra);
                pstmt.setString(6, "ChuaTra");
                pstmt.executeUpdate();

            } catch (SQLServerException ex) {
                System.out.println("Lỗi 1:" + ex);
            } catch (Exception e) {
                System.out.println("Lỗi 2:" + e);
            }
//            capNhatMS dfRB = new capNhatMS();
//            dfRB.capNhatmuonSach(cnms);
            themvaobangMS1(cnms);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Đã xảy ra lỗi: " + e.getMessage());
        }
    }

    private void themvaobangMS1(muonSach1 s) {
        DefaultTableModel model = (DefaultTableModel) tblmsach.getModel();
        model.addRow(new Object[]{s.getMaDG(), s.getMaSach(), s.getNgaymuon(), s.getNgayhentra(), "", "ChuaTra"});
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLMuonSach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLMuonSach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLMuonSach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLMuonSach.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLMuonSach().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMuon;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTra;
    private javax.swing.JButton btnlamMoi;
    private javax.swing.JButton btnthoat;
    private javax.swing.JButton btntroLai;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoTheoMDG;
    private javax.swing.JRadioButton rdoTheoMS;
    private javax.swing.JTable tblmsach;
    private javax.swing.JTextField txtMaDG;
    private javax.swing.JTextField txtNgayM;
    private javax.swing.JTextField txtTTMuon;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtmaS;
    private javax.swing.JTextField txtngayHenTra;
    private javax.swing.JTextField txtngayTra;
    // End of variables declaration//GEN-END:variables
}
